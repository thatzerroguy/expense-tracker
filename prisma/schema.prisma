// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String             @id @default(uuid())
  email            String             @unique
  name             String
  password         String
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  expenses         Expenses[]
  Income           Income[]
  RecuuringIncome  RecurringIncome[]
  RecurringExpense RecurringExpense[]
}

model Expenses {
  id          String      @id @default(uuid())
  userId      String
  description String
  amount      Float
  expenseType expenseType
  date        DateTime    @default(now())
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  user               User              @relation(fields: [userId], references: [id])
  RecurringExpense   RecurringExpense? @relation(fields: [recurringExpenseId], references: [id])
  recurringExpenseId String?
}

enum expenseType {
  FOOD
  TRANSPORT
  ENTERTAINMENT
  UTILITIES
  HEALTHCARE
  OTHER
}

model Income {
  id        String   @id @default(uuid())
  userId    String
  source    String
  amount    Float
  date      DateTime @default(now())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user              User             @relation(fields: [userId], references: [id])
  RecurringIncome   RecurringIncome? @relation(fields: [recurringIncomeId], references: [id])
  recurringIncomeId String?
}

model RecurringIncome {
  id                String    @id @default(uuid())
  userId            String
  source            String
  amount            Float
  frequency         Frequency
  interval          Int       @default(1)
  startDate         DateTime
  nextExecutionDate DateTime
  isActive          Boolean   @default(true)
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt

  user   User     @relation(fields: [userId], references: [id])
  income Income[]
}

model RecurringExpense {
  id          String      @id @default(uuid())
  userId      String
  description String
  amount      Float
  expenseType expenseType

  frequency         Frequency
  interval          Int       @default(1)
  startDate         DateTime
  nextExecutionDate DateTime
  isActive          Boolean   @default(true)
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt

  user    User       @relation(fields: [userId], references: [id])
  expense Expenses[]
}

enum Frequency {
  DAILY
  WEEKLY
  MONTHLY
  YEARLY
}
